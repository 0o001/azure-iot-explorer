// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deviceEvents deviceEvents in non-pnp context matches snapshot 1`] = `
<Stack
  className="device-events"
  key="device-events"
>
  <Commands
    fetchData={[Function]}
    monitoringData={false}
    setMonitoringData={[Function]}
    setShowContentTypePanel={[Function]}
    setShowPnpModeledEvents={[Function]}
    setShowSimulationPanel={[Function]}
    setShowSystemProperties={[Function]}
    showContentTypePanel={false}
    showPnpModeledEvents={false}
    showSimulationPanel={false}
    showSystemProperties={false}
    startDisabled={false}
  />
  <HeaderView
    headerText="deviceEvents.headerText"
    tooltip="deviceEvents.tooltip"
  />
  <div
    className="horizontal-item"
  >
    <ConsumerGroup
      consumerGroup="$Default"
      monitoringData={false}
      setConsumerGroup={[Function]}
    />
  </div>
  <StartTime
    monitoringData={false}
    setHasError={[Function]}
    setSpecifyStartTime={[Function]}
    setStartTime={[Function]}
    specifyStartTime={false}
  />
  <div
    className="horizontal-item"
  >
    <CustomEventHub
      monitoringData={false}
      setCustomEventHubConnectionString={[Function]}
      setCustomEventHubName={[Function]}
      setHasError={[Function]}
      setUseBuiltInEventHub={[Function]}
      useBuiltInEventHub={false}
    />
  </div>
  <DeviceSimulationPanel
    onToggleSimulationPanel={[Function]}
    showSimulationPanel={false}
  />
  <DeviceContentTypePanel
    onToggleContentTypePanel={[Function]}
    showContentTypePanel={false}
  />
  <div
    className="device-events-container"
  >
    <div
      className=""
    />
  </div>
</Stack>
`;

exports[`deviceEvents deviceEvents in pnp context matches snapshot while interface cannot be found 1`] = `
<Stack
  className="device-events"
  key="device-events"
>
  <Commands
    fetchData={[Function]}
    monitoringData={false}
    setMonitoringData={[Function]}
    setShowContentTypePanel={[Function]}
    setShowPnpModeledEvents={[Function]}
    setShowSimulationPanel={[Function]}
    setShowSystemProperties={[Function]}
    showContentTypePanel={false}
    showPnpModeledEvents={true}
    showSimulationPanel={false}
    showSystemProperties={false}
    startDisabled={false}
  />
  <HeaderView
    headerText="deviceEvents.headerText"
    tooltip="deviceEvents.tooltip"
  />
  <div
    className="horizontal-item"
  >
    <ConsumerGroup
      consumerGroup="$Default"
      monitoringData={false}
      setConsumerGroup={[Function]}
    />
  </div>
  <StartTime
    monitoringData={false}
    setHasError={[Function]}
    setSpecifyStartTime={[Function]}
    setStartTime={[Function]}
    specifyStartTime={false}
  />
  <div
    className="horizontal-item"
  >
    <CustomEventHub
      monitoringData={false}
      setCustomEventHubConnectionString={[Function]}
      setCustomEventHubName={[Function]}
      setHasError={[Function]}
      setUseBuiltInEventHub={[Function]}
      useBuiltInEventHub={false}
    />
  </div>
  <DeviceSimulationPanel
    onToggleSimulationPanel={[Function]}
    showSimulationPanel={false}
  />
  <DeviceContentTypePanel
    onToggleContentTypePanel={[Function]}
    showContentTypePanel={false}
  />
  <div
    className="device-events-container"
  >
    <div
      className=""
    />
  </div>
</Stack>
`;

exports[`deviceEvents deviceEvents in pnp context matches snapshot while interface definition is retrieved 1`] = `
<Stack
  className="device-events"
  key="device-events"
>
  <Commands
    fetchData={[Function]}
    monitoringData={false}
    setMonitoringData={[Function]}
    setShowContentTypePanel={[Function]}
    setShowPnpModeledEvents={[Function]}
    setShowSimulationPanel={[Function]}
    setShowSystemProperties={[Function]}
    showContentTypePanel={false}
    showPnpModeledEvents={true}
    showSimulationPanel={false}
    showSystemProperties={false}
    startDisabled={false}
  />
  <HeaderView
    headerText="deviceEvents.headerText"
    tooltip="deviceEvents.tooltip"
  />
  <div
    className="horizontal-item"
  >
    <ConsumerGroup
      consumerGroup="$Default"
      monitoringData={false}
      setConsumerGroup={[Function]}
    />
  </div>
  <StartTime
    monitoringData={false}
    setHasError={[Function]}
    setSpecifyStartTime={[Function]}
    setStartTime={[Function]}
    specifyStartTime={false}
  />
  <div
    className="horizontal-item"
  >
    <CustomEventHub
      monitoringData={false}
      setCustomEventHubConnectionString={[Function]}
      setCustomEventHubName={[Function]}
      setHasError={[Function]}
      setUseBuiltInEventHub={[Function]}
      useBuiltInEventHub={false}
    />
  </div>
  <DeviceSimulationPanel
    onToggleSimulationPanel={[Function]}
    showSimulationPanel={false}
  />
  <DeviceContentTypePanel
    onToggleContentTypePanel={[Function]}
    showContentTypePanel={false}
  />
  <div
    className="device-events-container"
  >
    <div
      className=""
    />
  </div>
</Stack>
`;
